#!/usr/sbin/nft -f
#
table ip filter {
    #####################################################################
    ## Définition des ensembles dynamiques pour suivre les étapes du code ##
    #####################################################################
    set P1 {
        type ipv4_addr
        flags dynamic, timeout
        timeout 10s
    }
    set P2 {
        type ipv4_addr
        flags dynamic, timeout
        timeout 10s
    }
    set P3 {
        type ipv4_addr
        flags dynamic, timeout
        timeout 10s
    }
    set P4 {
        type ipv4_addr
        flags dynamic, timeout
        timeout 10s
    }

    #####################################################################
    ## Chaîne principale (hook input)                                  ##
    #####################################################################
    chain input {
        type filter hook input priority 0; policy drop;

        # 1. Autoriser les connexions SSH existantes (établies ou connexes)
	iif "wg0" accept

	ct state vmap {invalid: drop, established : accept, related : accept }
	ip protocol icmp accept

	iifname "wg0" tcp dport 52599

        ###########################################################
        ## Processus du code secret en 4 étapes
        ###########################################################
        # Phase 1 : Sur le port 100, on ajoute l’IP source à l’ensemble P1
        tcp dport 100 update @P1 { ip saddr timeout 10s } accept

        # Phase 2 : Sur le port 200, si l’IP figure dans P1,
        # on passe dans la chaîne into_p2 qui la retire de P1, la place dans P2 et loggue
        tcp dport 200 ip saddr @P1 jump into_p2

        # Phase 3 : Sur le port 300, si l’IP figure dans P2,
        # on passe dans la chaîne into_p3 qui la retire de P2, la place dans P3 et loggue
        tcp dport 300 ip saddr @P2 jump into_p3

        # Phase 4 : Sur le port 400, si l’IP figure dans P3,
        # on passe dans la chaîne into_p4 qui la retire de P3, la place dans P4 et loggue
        tcp dport 400 ip saddr @P3 jump into_p4

        ###########################################################
        ## Ouverture du SSH pour les IP ayant atteint la phase 4 ##
        ###########################################################
        tcp dport 52599 ip saddr @P4 accept

        # Sinon, pour toute nouvelle connexion SSH, on refuse
        tcp dport 52599 ct state new drop
    }


    #####################################################################
    ## Chaîne into_p2 – Phase 2                                      ##
    #####################################################################
    chain into_p2 {
        # Retirer l’IP de P1 (similaire à --remove)
        delete @P1 { ip saddr }
        # Ajouter l’IP dans P2 (similaire à --set)
        update @P2 { ip saddr timeout 10s }
        # Enregistrer un log (préfixe "INTO P2: ")
        log prefix "INTO P2: "
        accept
    }

    #####################################################################
    ## Chaîne into_p3 – Phase 3                                      ##
    #####################################################################
    chain into_p3 {
        delete @P2 { ip saddr }
        update @P3 { ip saddr timeout 10s }
        log prefix "INTO P3: "
        accept
    }

    #####################################################################
    ## Chaîne into_p4 – Phase 4                                      ##
    #####################################################################
    chain into_p4 {
        delete @P3 { ip saddr }
        update @P4 { ip saddr timeout 10s }
        log prefix "INTO P4: "
        accept
    }
}
